<!DOCTYPE html>
<!--[if lt IE 7]>      <html class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
<!--[if IE 7]>         <html class="no-js lt-ie9 lt-ie8"> <![endif]-->
<!--[if IE 8]>         <html class="no-js lt-ie9"> <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js"> <!--<![endif]-->
    <head>
        <meta charset=UTF-8"utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
        <title>简约框架参考手册</title>
        <meta name="description" content="">
        <meta name="viewport" content="width=device-width">
        <link rel="stylesheet" href="../css/style.css">
        <script src="../js/vendor/modernizr-2.6.2.min.js"></script>
    </head>
    <body>
        <!--[if lt IE 7]>
            <p class="chromeframe">You are using an <strong>outdated</strong> browser. Please <a href="#">activate Google Chrome Frame</a> to improve your experience.</p>
        <![endif]-->

        <div class="wrapper">
            <header>
                <h1>简约框架参考手册</h1>
            </header>
            <aside class="sidebar">
<ul>
<li>入门指引

<ul>
<li><a href="../index.htm">简介</a></li>
<li><a href="simpletutorials.htm">简明教程</a></li>
<li><a href="style-guide.htm">代码风格</a></li>
<li><a href="module.htm">模块</a></li>
<li><a href="license.htm">许可</a></li>
</ul></li>

<li>基础模块
<ul>
<li><a href="base.macro.htm">宏</a></li>
<li><a href="base.global.htm">全局变量</a></li>
<li><a href="base.log.htm">日志</a></li>
<li><a href="base.string.htm">字符串</a></li>
<li><a href="base.hashmap.htm">hash map</a></li>
<li><a href="base.timemanager.htm">时间管理器</a></li>
<li><a href="base.tinytimer.htm">小型定时器</a></li>
<li><a href="base.util.htm">工具集</a></li>
</ul></li>

<li>数据库模块
<ul>
<li><a href="db.manager.htm">管理器</a></li>
<li><a href="db.odbc.htm">ODBC</a></li>
</ul></li>

<li>引擎模块
<ul>
<li><a href="engine.kernel.htm">核心</a></li>
<li><a href="engine.thread.htm">线程</a></li>
</ul></li>

<li>事件模块
<ul>
<li><a href="event.manager.htm">管理器</a></li>
</ul></li>

<li>文件模块
<ul>
<li><a href="file.api.htm">系统API</a></li>
<li><a href="file.database.htm">文件数据库</a></li>
<li><a href="file.ini.htm">ini文件</a></li>
</ul></li>

<li>网络模块
<ul>
<li><a href="net.connection.htm">连接</a></li>
<li><a href="net.packet.htm">包</a></li>
<li><a href="net.socket.htm">套接字</a></li>
<li><a href="net.manager.htm">管理器</a></li>
</ul></li>

<li>性能模块
<ul>
<li><a href="performance.eyes.htm">监视器</a></li>
</ul></li>

<li>脚本模块
<ul>
<li><a href="script.cache.htm">缓存</a></li>
<li><a href="script.lua.htm">lua</a></li>
</ul></li>

<li>系统模块
<ul>
<li><a href="sys.memory.htm">内存</a></li>
<li><a href="sys.info.htm">系统信息</a></li>
<li><a href="sys.process.htm">进程</a></li>
<li><a href="sys.thread.htm">线程</a></li>
<li><a href="sys.util.htm">工具集</a></li>
</ul></li>

<li>工具模块
<ul>
<li><a href="util.compressor.htm">压缩模块</a></li>
</ul></li>

</ul>
</aside>

<section class="content">

<h1>event module manager</h1>

<ul>
<li><a href="#total">总述</a></li>
<li><a href="#define">定义</a></li>
<li><a href="#macro">宏</a></li>
<li><a href="#getsingleton_pointer">::getsingleton_pointer</a></li>
<li><a href="#getsingleton">::getsingleton</a></li>
<li><a href="#push">::push*</a></li>
<li><a href="#registerhandle">::registerhandle</a></li>
<li><a href="#processall">::processall</a></li>
<li><a href="#unregisterhandle">::unregisterhandle</a></li>
<li><a href="#init">::init</a></li>
</ul>

<p><a name="total"></a></p>

<h2>总述</h2>

<p>事件系统提供了对事件的注册、管理等的接口，由于核心暂时未用到事件系统，故在此暂不做具体示例。</p>

<p><a name="define"></a></p>

<h2>定义</h2>

<pre><code>
namespace pf_event {                                                               
                                                                                   
class PF_API System : public pf_base::Singleton<System> {                          
</code></pre>

<p><a name="macro"></a></p>

<h2>宏</h2>
<blockquote>
<p>EVENT_SYSTEM_POINTER</p>
<p>由于事件管理器为单例，每个应用里只存在一个，所以在这里提供了一个获取事件管理器指针的宏。</p>
</blockquote>

<p><a name="getsingleton_pointer"></a></p>

<h2>::getsingleton_pointer</h2>

<blockquote>
<p>static System *getsingleton_pointer(); </p>
<p>描述：获取事件管理器对象指针（单例）。</p>
<p>参数：</p>
<p>无</p>
<p>返回值：pf_event::System *</p>
</blockquote>

<p><a name="getsingleton"></a></p>

<h2>::getsingleton</h2>

<blockquote>
<p>static System &getsingleton(); </p>
<p>描述：获取事件管理器对象。</p>
<p>参数：</p>
<p>无</p>
<p>返回值：pf_event::System &</p>
</blockquote>

<p><a name="push"></a></p>

<h2>::push*</h2>

<blockquote>
<p>virtual void push(uint16_t id, ...); </p>
<p>描述：推送一个事件。</p>
<p>参数：</p>
<p>uint16_t id 事件ID。</p>
<p>其他参数</p>
<p>返回值：无</p>
<p>----------------------------------------------------------------------------</p>
<p>virtual void push(const std::string &eventname, ...); </p>
<p>描述：推送一个事件。</p>
<p>参数：</p>
<p>const std::string &eventname 事件名称。</p>
<p>其他参数</p>
<p>返回值：无</p>
</blockquote>

<p><a name="registerhandle"></a></p>

<h2>::registerhandle</h2>

<blockquote>
<p>virtual void registerhandle(const std::string &name,                         
                               function_eventhandle handle,                     
                               uint32_t ownerdata = NULL);                      
</p>
<p>描述：注册一个事件的处理函数。</p>
<p>参数：</p>
<p>const std::string &name 事件名称。</p>
<p>function_eventhandle handle 事件回调函数。</p>
<p>uint32_t ownerdata 用户数据。</p>
<p>返回值：void</p>
</blockquote>

<p><a name="processall"></a></p>

<h2>::processall</h2>

<blockquote>
<p>virtual void processall();                      
</p>
<p>描述：处理所有事件函数。</p>
<p>参数：</p>
<p>无</p>
<p>返回值：无</p>
</blockquote>

<p><a name="unregisterhandle"></a></p>

<h2>::unregisterhandle</h2>

<blockquote>
<p>virtual void unregisterhandle(const std::string& name,                       
                                 function_eventhandle handle,                   
                                 uint32_t ownerdata);                      
</p>
<p>描述：注销一个事件回调函数。</p>
<p>参数：</p>
<p>const std::string& name 事件名称。</p>
<p>function_eventhandle handle 回调函数。</p>
<p>uint32_t ownerdata 用户数据。</p>
<p>返回值：无</p>
</blockquote>

<p><a name="init"></a></p>

<h2>::init</h2>

<blockquote>
<p>virtual void init(eventdefine_t events[]);                     
</p>
<p>描述：事件系统初始化函数。</p>
<p>参数：</p>
<p>eventdefine_t events[] 事件数组。</p>
<p>返回值：无</p>
</blockquote>

<footer>
    <p><a href="#">Dayle Rees</a>.</p>
</footer>
            
            
</section>
  <div class="clearfix"></div>
</div>

        <script src="../../ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
        <script>window.jQuery || document.write('<script src="../js/vendor/jquery-1.8.2.min.js"><\/script>')</script>
        <script src="../../checkout.stripe.com/v2/checkout.js"></script>
        <script src="../js/vendor/prettify.js"></script>
        <script src="../js/plugins.js"></script>
        <script src="../js/main.js"></script>

        <script type="text/javascript">

          var _gaq = _gaq || [];
          _gaq.push(['_setAccount', 'UA-37898177-1']);
          _gaq.push(['_trackPageview']);

          (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www/') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
          })();

        </script>
    </body>
</html>