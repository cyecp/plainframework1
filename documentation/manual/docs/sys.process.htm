<!DOCTYPE html>
<!--[if lt IE 7]>      <html class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
<!--[if IE 7]>         <html class="no-js lt-ie9 lt-ie8"> <![endif]-->
<!--[if IE 8]>         <html class="no-js lt-ie9"> <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js"> <!--<![endif]-->
    <head>
        <meta charset=UTF-8"utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
        <title>简约框架参考手册</title>
        <meta name="description" content="">
        <meta name="viewport" content="width=device-width">
        <link rel="stylesheet" href="../css/style.css">
        <script src="../js/vendor/modernizr-2.6.2.min.js"></script>
    </head>
    <body>
        <!--[if lt IE 7]>
            <p class="chromeframe">You are using an <strong>outdated</strong> browser. Please <a href="#">activate Google Chrome Frame</a> to improve your experience.</p>
        <![endif]-->

        <div class="wrapper">
            <header>
                <h1>简约框架参考手册</h1>
            </header>
            <aside class="sidebar">
<ul>
<li>入门指引

<ul>
<li><a href="../index.htm">简介</a></li>
<li><a href="simpletutorials.htm">简明教程</a></li>
<li><a href="style-guide.htm">代码风格</a></li>
<li><a href="module.htm">模块</a></li>
<li><a href="license.htm">许可</a></li>
</ul></li>

<li>基础模块
<ul>
<li><a href="base.macro.htm">宏</a></li>
<li><a href="base.global.htm">全局变量</a></li>
<li><a href="base.log.htm">日志</a></li>
<li><a href="base.string.htm">字符串</a></li>
<li><a href="base.hashmap.htm">hash map</a></li>
<li><a href="base.timemanager.htm">时间管理器</a></li>
<li><a href="base.tinytimer.htm">小型定时器</a></li>
<li><a href="base.util.htm">工具集</a></li>
</ul></li>

<li>数据库模块
<ul>
<li><a href="db.manager.htm">管理器</a></li>
<li><a href="db.odbc.htm">ODBC</a></li>
</ul></li>

<li>引擎模块
<ul>
<li><a href="engine.kernel.htm">核心</a></li>
<li><a href="engine.thread.htm">线程</a></li>
</ul></li>

<li>事件模块
<ul>
<li><a href="event.manager.htm">管理器</a></li>
</ul></li>

<li>文件模块
<ul>
<li><a href="file.api.htm">系统API</a></li>
<li><a href="file.database.htm">文件数据库</a></li>
<li><a href="file.ini.htm">ini文件</a></li>
</ul></li>

<li>网络模块
<ul>
<li><a href="net.connection.htm">连接</a></li>
<li><a href="net.packet.htm">包</a></li>
<li><a href="net.socket.htm">套接字</a></li>
<li><a href="net.manager.htm">管理器</a></li>
</ul></li>

<li>性能模块
<ul>
<li><a href="performance.eyes.htm">监视器</a></li>
</ul></li>

<li>脚本模块
<ul>
<li><a href="script.cache.htm">缓存</a></li>
<li><a href="script.lua.htm">lua</a></li>
</ul></li>

<li>系统模块
<ul>
<li><a href="sys.memory.htm">内存</a></li>
<li><a href="sys.info.htm">系统信息</a></li>
<li><a href="sys.process.htm">进程</a></li>
<li><a href="sys.thread.htm">线程</a></li>
<li><a href="sys.util.htm">工具集</a></li>
</ul></li>

<li>工具模块
<ul>
<li><a href="util.compressor.htm">压缩模块</a></li>
</ul></li>

</ul>
</aside>

<section class="content">

<h1>system module process</h1>

<ul>
<li><a href="#total">总述</a></li>
<li><a href="#process_getid">process::getid*</a></li>
<li><a href="#process_writeid">process::writeid</a></li>
<li><a href="#process_waitexit">process::waitexit</a></li>
<li><a href="#process_getinfo">process::getinfo</a></li>
<li><a href="#process_get_cpu_usage">process::get_cpu_usage</a></li>
<li><a href="#process_get_virtualmemory_usage">process_get_virtualmemory_usage</a></li>
<li><a href="#process_get_physicalmemory_usage">process_get_physicalmemory_usage</a></li>
<li><a href="#process_daemon">process_daemon</a></li>
</ul>

<p><a name="total"></a></p>

<h2>总述</h2>

<p>进程模块封装了与系统进程有关的常用接口，这些包括进程的基本信息以及进程的操作。</p>

<p><a name="process_getid"></a></p>

<h2>process::getid*</h2>
<blockquote>
<p>PF_API int32_t getid(); </p>
<p>描述：获取当前的进程ID。</p>
<p>参数：无</p>
<p>返回：int32_t</p>
<p>---------------------------------------------------------------------------------</p>
<p>PF_API int32_t getid(const char *filename); </p>
<p>描述：从文件中读取进程ID（对应writeid的文件）。</p>
<p>参数：</p>
<p>const char *filename 文件名。</p>
<p>返回：int32_t</p>
</blockquote>

<p><a name="process_writeid"></a></p>

<h2>process::writeid</h2>
<blockquote>
<p>PF_API bool writeid(const char *filename); </p>
<p>描述：从文件中写入进程ID。</p>
<p>参数：</p>
<p>const char *filename 文件名。</p>
<p>返回：bool</p>
</blockquote>

<p><a name="process_waitexit"></a></p>

<h2>process::waitexit</h2>
<blockquote>
<p>PF_API bool waitexit(const char *filename); </p>
<p>描述：根据进程ID文件退出进程。</p>
<p>参数：</p>
<p>const char *filename 文件名。</p>
<p>返回：bool</p>
</blockquote>

<p><a name="process_getinfo"></a></p>

<h2>process::getinfo</h2>
<blockquote>
<p>PF_API void getinfo(int32_t id, info_t &info); </p>
<p>描述：根据进程ID获取进程信息。</p>
<p>参数：</p>
<p>int32_t id 进程ID。</p>
<p>info_t &info 进程信息结构体对象。</p>
<p>返回：无</p>
</blockquote>

<p><a name="process_getinfo"></a></p>

<h2>process::getinfo</h2>
<blockquote>
<p>PF_API void getinfo(int32_t id, info_t &info); </p>
<p>描述：根据进程ID获取进程信息。</p>
<p>参数：</p>
<p>int32_t id 进程ID。</p>
<p>info_t &info 进程信息结构体对象。</p>
<p>返回：无</p>
</blockquote>

<p><a name="process_get_cpu_usage"></a></p>

<h2>process::get_cpu_usage</h2>
<blockquote>
<p>PF_API float get_cpu_usage(int32_t id); </p>
<p>描述：根据进程ID获取进程cpu占用。</p>
<p>参数：</p>
<p>int32_t id 进程ID。</p>
<p>返回：float</p>
</blockquote>

<p><a name="process_get_virtualmemory_usage"></a></p>

<h2>process::get_virtualmemory_usage</h2>
<blockquote>
<p>PF_API uint64_t get_virtualmemory_usage(int32_t id); </p>
<p>描述：根据进程ID获取进程虚拟内存占用。</p>
<p>参数：</p>
<p>int32_t id 进程ID。</p>
<p>返回：uint64_t</p>
</blockquote>

<p><a name="process_get_physicalmemory_usage"></a></p>

<h2>process::get_physicalmemory_usage</h2>
<blockquote>
<p>PF_API uint64_t get_physicalmemory_usage(int32_t id); </p>
<p>描述：根据进程ID获取进程物理内存占用。</p>
<p>参数：</p>
<p>int32_t id 进程ID。</p>
<p>返回：uint64_t</p>
</blockquote>

<p><a name="process_daemon"></a></p>

<h2>process::daemon</h2>
<blockquote>
<p>PF_API bool daemon(); </p>
<p>描述：进入进程守护模式。</p>
<p>参数：无</p>
<p>返回：bool</p>
</blockquote>

<nav>
	<a href="sys.info.htm">系统信息</a> |
	<a href="sys.thread.htm">线程 </a>
</nav>
<footer>
    <p><a href="#">Dayle Rees</a>.</p>
</footer>
            
            
</section>
  <div class="clearfix"></div>
</div>

        <script src="../../ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
        <script>window.jQuery || document.write('<script src="../js/vendor/jquery-1.8.2.min.js"><\/script>')</script>
        <script src="../../checkout.stripe.com/v2/checkout.js"></script>
        <script src="../js/vendor/prettify.js"></script>
        <script src="../js/plugins.js"></script>
        <script src="../js/main.js"></script>

        <script type="text/javascript">

          var _gaq = _gaq || [];
          _gaq.push(['_setAccount', 'UA-37898177-1']);
          _gaq.push(['_trackPageview']);

          (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www/') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
          })();

        </script>
    </body>
</html>