<!DOCTYPE html>
<!--[if lt IE 7]>      <html class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
<!--[if IE 7]>         <html class="no-js lt-ie9 lt-ie8"> <![endif]-->
<!--[if IE 8]>         <html class="no-js lt-ie9"> <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js"> <!--<![endif]-->
    <head>
        <meta charset=UTF-8"utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
        <title>简约框架查考手册</title>
        <meta name="description" content="">
        <meta name="viewport" content="width=device-width">
        <link rel="stylesheet" href="../css/style.css">
        <script src="../js/vendor/modernizr-2.6.2.min.js"></script>
    </head>
    <body>
        <!--[if lt IE 7]>
            <p class="chromeframe">You are using an <strong>outdated</strong> browser. Please <a href="#">activate Google Chrome Frame</a> to improve your experience.</p>
        <![endif]-->

        <div class="wrapper">
            <header>
                <h1>简约框架查考手册</h1>
            </header>
            <aside class="sidebar">
                	<ul>
<li>入门指引

<ul>
<li><a href="../index.htm">简介</a></li>
<li><a href="simpletutorials.htm">简明教程</a></li>
<li><a href="style-guide.htm">代码风格</a></li>
<li><a href="module.htm">模块</a></li>
<li><a href="license.htm">许可</a></li>
</ul></li>
<li>基础模块
<ul>
<li><a href="base.macro.htm">宏</a></li>
<li><a href="base.global.htm">全局变量</a></li>
<li><a href="base.log.htm">日志</a></li>
<li><a href="base.string.htm">字符串</a></li>
<li><a href="base.hashmap.htm">hash map</a></li>
<li><a href="base.timemanager.htm">时间管理器</a></li>
<li><a href="base.tinytimer.htm">小型定时器</a></li>
<li><a href="base.util.htm">工具集</a></li>
</ul></li>

<li>数据库模块
<ul>
<li><a href="db.manager.htm">管理器</a></li>
<li><a href="db.odbc.htm">ODBC</a></li>
</ul></li>

<li>引擎模块
<ul>
<li><a href="engine.kernel.htm">核心</a></li>
<li><a href="engine.thread.htm">线程</a></li>
</ul></li>

<li>事件模块
<ul>
<li><a href="event.manager.htm">管理器</a></li>
</ul></li>

<li>文件模块
<ul>
<li><a href="file.api.htm">系统API</a></li>
<li><a href="file.database.htm">文件数据库</a></li>
<li><a href="file.ini.htm">ini文件</a></li>
</ul></li>

<li>网络模块
<ul>
<li><a href="net.connection.htm">连接</a></li>
<li><a href="net.packet.htm">包</a></li>
<li><a href="net.socket.htm">套接字</a></li>
<li><a href="net.manager.htm">管理器</a></li>
</ul></li>

<li>性能模块
<ul>
<li><a href="performance.eyes.htm">监视器</a></li>
</ul></li>

<li>脚本模块
<ul>
<li><a href="script.cache.htm">缓存</a></li>
<li><a href="script.lua.htm">lua</a></li>
</ul></li>

<li>系统模块
<ul>
<li><a href="sys.memory.htm">内存</a></li>
<li><a href="sys.info.htm">系统信息</a></li>
<li><a href="sys.process.htm">进程</a></li>
<li><a href="sys.thread.htm">线程</a></li>
<li><a href="sys.util.htm">工具集</a></li>
</ul></li>

<li>工具模块
<ul>
<li><a href="util.compressor.htm">压缩模块</a></li>
</ul></li>
</ul>
            </aside>
            <section class="content">

<h1>代码风格</h1>

<ul>
<li><a href="#introduction">介绍</a></li>

</ul>

<p><a name="introduction"></a></p>

<h2>介绍</h2>

<p>框架自身采用了google的C++风格，作者也鼓励在你的应用中使用此风格，有关此风格你可以查阅相关资料了解。下面是一段plain framework中的代码，以便大家参考：</p>

<p>你可以在此处下载到本项目使用的 风格指南:</p>

<blockquote>
<p>链接：<a href="http://pan.baidu.com/s/1bneYgI7">http://pan.baidu.com/s/1bneYgI7</a> 密码：0ox1</p>
</blockquote>

<blockquote>
<p>base/global.h</p>
</blockquote>

<pre><code>/**
 * PLAIN FRAMEWORK ( https://github.com/viticm/plainframework )
 * $Id global.h
 * @link https://github.com/viticm/plainframework for the canonical source repository
 * @copyright Copyright (c) 2014- viticm( viticm.ti@gmail.com )
 * @license
 * @user viticm<viticm.ti@gmail.com>
 * @date 2014/07/28 15:57
 * @uses the base module for global defines
 */
#ifndef PF_BASE_GLOBAL_H_
#define PF_BASE_GLOBAL_H_

#include "pf/base/config.h"

namespace pf_base {

namespace global {

extern char net_modulename[FILENAME_MAX];
extern char script_modulename[FILENAME_MAX];
extern char performance_modulename[FILENAME_MAX];
extern char db_modulename[FILENAME_MAX];
extern char engine_modulename[FILENAME_MAX];
extern char applicationname[FILENAME_MAX]; //应用全局名称
extern uint8_t applicationtype; //应用的类型 0 服务器 1 客户端

PF_API const char *get_net_modulename();
PF_API const char *get_script_modulename();
PF_API const char *get_performanace_modulename();
PF_API const char *get_db_modulename();
PF_API const char *get_engine_modulename();
PF_API const char *get_applicationname();
PF_API void set_applicationname(const char *name);
PF_API uint8_t get_applicationtype();
PF_API void set_applicationtype(uint8_t type);

}; //namespace global

}; //namespace ps_base

#define NET_MODULENAME pf_base::global::get_net_modulename()
#define SCRIPT_MODULENAME pf_base::global::get_script_modulename()
#define PERFORMANCE_MODULENAME pf_base::global::get_performanace_modulename()
#define DB_MODULENAME pf_base::global::get_db_modulename()
#define ENGINE_MODULENAME pf_base::global::get_engine_modulename()
#define APPLICATION_NAME pf_base::global::get_applicationname()
#define APPLICATION_TYPE pf_base::global::get_applicationtype()

#endif //PF_BASE_GLOBAL_H_

</code></pre>

<blockquote>
<p>base/global.cc</p>
</blockquote>

<pre><code>#include "pf/base/string.h"
#include "pf/base/global.h"

namespace pf_base {

namespace global {

char net_modulename[FILENAME_MAX] = {0};
char script_modulename[FILENAME_MAX] = {0};
char performance_modulename[FILENAME_MAX] = {0};
char db_modulename[FILENAME_MAX] =  {0};
char engine_modulename[FILENAME_MAX] = {0};
char applicationname[FILENAME_MAX] = {0};
uint8_t applicationtype = 0;

const char *get_net_modulename() {
  __ENTER_FUNCTION
    if (strlen(net_modulename) > 0) return net_modulename;
    snprintf(net_modulename, 
             sizeof(net_modulename) - 1, 
             "net_%s", 
             APPLICATION_NAME);
    return net_modulename;
  __LEAVE_FUNCTION
    return NULL;
}

const char *get_script_modulename() {
  __ENTER_FUNCTION
    if (strlen(script_modulename) > 0) return script_modulename;
    snprintf(script_modulename, 
             sizeof(script_modulename) - 1, 
             "script_%s", 
             APPLICATION_NAME);
    return script_modulename;
  __LEAVE_FUNCTION
    return NULL;
}

const char *get_performanace_modulename() {
  __ENTER_FUNCTION
    if (strlen(performance_modulename) > 0) return performance_modulename;
    snprintf(performance_modulename, 
             sizeof(performance_modulename) - 1, 
             "performance_%s", 
             APPLICATION_NAME);
    return performance_modulename;
  __LEAVE_FUNCTION
    return NULL;
}

const char *get_db_modulename() {
  __ENTER_FUNCTION
    if (strlen(db_modulename) > 0) return db_modulename;
    snprintf(db_modulename, 
             sizeof(db_modulename) - 1, 
             "db_%s", 
             APPLICATION_NAME);
    return db_modulename;
  __LEAVE_FUNCTION
    return NULL;
}

const char *get_engine_modulename() {
  __ENTER_FUNCTION
    if (strlen(engine_modulename) > 0) return engine_modulename;
    snprintf(engine_modulename, 
             sizeof(engine_modulename) - 1, 
             "engine_%s", 
             APPLICATION_NAME);
    return engine_modulename;
  __LEAVE_FUNCTION
    return NULL;
}

const char *get_applicationname() {
  __ENTER_FUNCTION
    if (0 == strlen(applicationname)) {
      snprintf(applicationname,
               sizeof(applicationname) - 1,
               "%s",
               "unknown");
    }
    return applicationname;
  __LEAVE_FUNCTION
    return NULL;
}

void set_applicationname(const char *name) {
  string::safecopy(applicationname, name, sizeof(applicationname));  
}

uint8_t get_applicationtype() {
  return applicationtype;
}

void set_applicationtype(uint8_t type) {
  applicationtype = type;
}

}; //namespace global

} //namespace pf_base

</code></pre>


                <nav>
                                    <a href="simpletutorials.htm">简明教程</a> |
                                                    <a href="module.htm">模块 </a>
                                </nav>
                <footer>
                    <p><a href="javascript:if(confirm('http://github.com/daylerees/docs-reader  \n\n该文件无法用 Teleport Ultra 下载, 因为 它是一个域或路径外部被设置为它的启始地址的地址。  \n\n你想在服务器上打开它?'))window.location='http://github.com/daylerees/docs-reader'">Dayle Rees</a>.</p>
                </footer>
            </section>
            <div class="clearfix"></div>
        </div>

        <script src="../../ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
        <script>window.jQuery || document.write('<script src="../js/vendor/jquery-1.8.2.min.js"/*tpa=http://administrator.frozennode.com/js/vendor/jquery-1.8.2.min.js*/><\/script>')</script>
        <script src="../../checkout.stripe.com/v2/checkout.js"></script>
        <script src="../js/vendor/prettify.js"></script>
        <script src="../js/plugins.js"></script>
        <script src="../js/main.js"></script>

        <script type="text/javascript">

          var _gaq = _gaq || [];
          _gaq.push(['_setAccount', 'UA-37898177-1']);
          _gaq.push(['_trackPageview']);

          (function() {
            var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
            ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www/') + '.google-analytics.com/ga.js';
            var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
          })();

        </script>
    </body>
</html>